# test in parallel (MPI) mode
name: Parallel (MPI)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: neworder (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: "pip: Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y mpich libmpich-dev
      - name: Build
        run: |
          python -m pip install .[parallel] pytest
      - name: Test with pytest
        run: |
          mpiexec -n 2 python -m pytest



      # - uses: actions/checkout@v3
      # - uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     auto-update-conda: true
      #     python-version: ${{ matrix.python-version }}
      # - name: setup
      #   shell: bash -l {0}
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y mpich libmpich-dev
      #     conda info
      #     conda list
      #     conda install python=${{ matrix.python-version }} gxx_linux-64 numpy pandas pybind11 pytest # mpich mpi4py
      # - name: build
      #   shell: bash -l {0}
      #   run: |
      #     conda activate test
      #     python -m pip install .[parallel]
      # - name: test
      #   shell: bash -l {0}
      #   run: |
      #     conda activate test
      #     mpiexec -n 2 python -m pytest

