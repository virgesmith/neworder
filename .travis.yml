dist: bionic

cache: packages

sudo: true

matrix:
  include:

    - name: venv_py3
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
      before_install: 
      - sudo apt-get update
      - sudo apt-get -y install build-essential mpich libmpich-dev
      script:
      - virtualenv -p python3 .venv
      - source .venv/bin/activate
      - pip install -U numpy pandas pybind11
      - make && make test
      - make -f MPI.mk && make -f MPI.mk test

    - name: conda_py3
      before_install: 
      - | 
        wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -q conda
        conda install -q conda-build
        conda create -q -n test-environment python=3.7
        source activate test-environment      
      install:
        - conda install gxx_linux-64 mpich numpy pandas pybind11
      script:
      - |
        make PY_CFG=python3-config && make test
        make PY_CFG=python3-config -f MPI.mk && make -f MPI.mk test

    # - name: venv_py36
    #   env: PYTHON=3.6
    #   addons:
    #     apt:
    #       sources:
    #       - ubuntu-toolchain-r-test
    #   before_install: 
    #   - sudo apt-get update
    #   - sudo apt-get -y install build-essential mpich libmpich-dev
    #   script:
    #   - virtualenv -p python3.6 .venv
    #   - source .venv/bin/activate
    #   - pip install -U numpy pandas pybind11
    #   - make && make test
    #   - make -f MPI.mk && make -f MPI.mk test

    # - name: cmake
    #   addons:
    #     apt:
    #       sources:
    #       - ubuntu-toolchain-r-test
    #   before_install: 
    #   - sudo apt-get update
    #   - sudo apt-get -y install build-essential python3 python3-dev python3-pip
    #   script:
    #   - python3 -m pip install -U numpy pandas pybind11
    #   - mkdir -p build
    #   - cd build
    #   - cmake .. 
    #   - make

    # # Prints out toolchain version info
    # - name: travis_env
    #   addons:
    #     apt:
    #       sources:
    #       - ubuntu-toolchain-r-test
    #   before_install:
    #   - sudo apt-get update
    #   - sudo apt-get -y install build-essential python3 python3-dev python3-pip mpich libmpich-dev
    #   - python3 -m pip install -U numpy pandas pybind11
    #   script:
    #   - g++ --version
    #   - mpirun --version
    #   # bit pointless as not using venv?
    #   - python3 --version
    #   - python3 -c"import numpy;print(numpy.__version__)"
    #   - python3 -c"import pandas;print(pandas.__version__)"

    - language: python
      python: 3.6
      before_install:
      - sudo apt-get update
      - sudo apt-get -y install build-essential mpich libmpich-dev
      install: 
      - pip install pybind11 numpy pandas
      script:
      # - python setup.py build
      # - python setup.py test
      - make && make test

    - language: python
      python: 3.7
      before_install:
      - sudo apt-get update
      - sudo apt-get -y install build-essential mpich libmpich-dev
      install: 
      - pip install pybind11 numpy pandas
      script:
      # - python setup.py build
      # - python setup.py test
      - make && make test

    - language: python
      python: 3.8
      before_install:
      - sudo apt-get update
      - sudo apt-get -y install build-essential mpich libmpich-dev
      install: 
      - pip install pybind11 numpy pandas
      script:
      # - python setup.py build
      # - python setup.py test
      - make && make test

  allow_failures:
    - python: 3.7
    - python: 3.8

#after_success:
#  - Rscript -e 'covr::codecov()'

warnings_are_errors: false

notifications:
  email:
    on_success: change
    on_failure: change
  slack: spenser-workspace:QzyXfMnQd5tUJaFZPK6Psl4M
