# Build environments

environment:
  matrix:
    # - PYTHON: "C:\\Python36-x64"
    #   PYTHON_ARCH: 64
    #   MSVC_VERSION: "Visual Studio 19 Win64"
    #   APPVEYOR_YML_DISABLE_PS_LINUX: 1

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    #   PYTHON: "C:\\Python37-x64"
    #   PYTHON_ARCH: 64
    #   MSVC_VERSION: "Visual Studio 19 Win64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python38-x64"
      PYTHON_ARCH: 64
      MSVC_VERSION: "Visual Studio 19 Win64"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    #   PYTHON: "C:\\Python39-x64"
    #   PYTHON_ARCH: 64
    #   MSVC_VERSION: "Visual Studio 19 Win64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      PYTHON: "3.8"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      PYTHON: "3.8"
      APPVEYOR_YML_DISABLE_PS_LINUX: true

stack: python %PYTHON%

matrix:
  allow_failures:
    - PYTHON: "C:\\Python36-x64"
  ## fail fast
  # fast_finish: true

init:
  - ps: |
      Write-Host "$env:PYTHON $env:PYTHON_ARCH $env:MSVC_VERSION"
      $python = $env:PYTHON + "\python.exe"
      & $python --version

install:
  - ps: |
      Start-FileDownload 'https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisetup.exe'
      .\msmpisetup.exe -unattend # TODO this doesnt seem to do anything
      $python = $env:PYTHON + "\python.exe"
      & $python -m pip install --upgrade pip wheel setuptools --no-warn-script-location
  - sh: |
      if [ "$APPVEYOR_BUILD_WORKER_IMAGE" == "Ubuntu" ];
      sudo apt update && sudo apt install -y mpich libmpich-dev
      else
      brew update && brew install open-mpi
      fi

build_script:
  - cmd: '%PYTHON%\python.exe setup.py install'
  - sh: python setup.py install

test_script:
  - cmd: '%PYTHON%\python.exe setup.py test'
  - sh: python setup.py test

notifications:
  - provider: Email
    to:
    - '{{commitAuthorEmail}}'
    on_build_success: false
  - provider: Slack
    incoming_webhook:
      secure: TgkWvYaiFVyz5lbNkDXlHJmYThnK+VJ3C07q7N5BE9pxgpMkDKDSY+7Mc9NLxZngJ18ErQll/v9GxuDqG/9qHIFs3EuJ9Sh3XVaEkKyJBsZOWFfP/mWY+pQljqjNxsWm
